diff --git giscanner/doctemplates/devdocs/meson.build giscanner/doctemplates/devdocs/meson.build
new file mode 100644
index 0000000000000000000000000000000000000000..2037182a5e83549efbfaa24e78a8453d53f0e95a
--- /dev/null
+++ giscanner/doctemplates/devdocs/meson.build
@@ -0,0 +1,19 @@
+doc_templates += files([
+  'Gjs/_doc.tmpl',
+  'Gjs/_index.tmpl',
+  'Gjs/_method.tmpl',
+  'Gjs/_methods.tmpl',
+  'Gjs/_properties.tmpl',
+  'Gjs/_signals.tmpl',
+  'Gjs/_staticmethods.tmpl',
+  'Gjs/_vfuncs.tmpl',
+  'Gjs/base.tmpl',
+  'Gjs/callback.tmpl',
+  'Gjs/class.tmpl',
+  'Gjs/default.tmpl',
+  'Gjs/enum.tmpl',
+  'Gjs/function.tmpl',
+  'Gjs/interface.tmpl',
+  'Gjs/method.tmpl',
+  'Gjs/namespace.tmpl',
+])
diff --git giscanner/doctemplates/mallard/meson.build giscanner/doctemplates/mallard/meson.build
new file mode 100644
index 0000000000000000000000000000000000000000..5fe4e2af6c223d7467ab1f33286c25b64bfa8045
--- /dev/null
+++ giscanner/doctemplates/mallard/meson.build
@@ -0,0 +1,63 @@
+base_templates = files([
+  'base.tmpl',
+  'class.tmpl',
+  'namespace.tmpl',
+])
+
+c_templates = files([
+  'C/callback.tmpl',
+  'C/class.tmpl',
+  'C/constructor.tmpl',
+  'C/default.tmpl',
+  'C/enum.tmpl',
+  'C/field.tmpl',
+  'C/function.tmpl',
+  'C/interface.tmpl',
+  'C/method.tmpl',
+  'C/namespace.tmpl',
+  'C/property.tmpl',
+  'C/record.tmpl',
+  'C/signal.tmpl',
+  'C/vfunc.tmpl',
+])
+
+gjs_templates = files([
+  'Gjs/callback.tmpl',
+  'Gjs/class.tmpl',
+  'Gjs/constructor.tmpl',
+  'Gjs/default.tmpl',
+  'Gjs/enum.tmpl',
+  'Gjs/field.tmpl',
+  'Gjs/function.tmpl',
+  'Gjs/interface.tmpl',
+  'Gjs/method.tmpl',
+  'Gjs/namespace.tmpl',
+  'Gjs/property.tmpl',
+  'Gjs/record.tmpl',
+  'Gjs/signal.tmpl',
+  'Gjs/vfunc.tmpl',
+])
+
+py_templates = files([
+  'Python/callback.tmpl',
+  'Python/class.tmpl',
+  'Python/constructor.tmpl',
+  'Python/default.tmpl',
+  'Python/enum.tmpl',
+  'Python/field.tmpl',
+  'Python/function.tmpl',
+  'Python/interface.tmpl',
+  'Python/method.tmpl',
+  'Python/namespace.tmpl',
+  'Python/property.tmpl',
+  'Python/record.tmpl',
+  'Python/signal.tmpl',
+  'Python/vfunc.tmpl',
+])
+
+doc_templates += [
+  base_templates,
+  c_templates,
+  gjs_templates,
+  py_templates,
+]
diff --git giscanner/meson.build giscanner/meson.build
index 41edcd44c5e5d95fcb2e0eeb906a6160f9764a18..3d7dc678a260b6db38afea809fe15e660d84da7e 100644
--- giscanner/meson.build
+++ giscanner/meson.build
@@ -53,17 +53,9 @@ configure_file(input : '../girepository/gdump.c',
 
 install_subdir('doctemplates', install_dir: giscannerdir)
 
-# XXX: this doesn't track the input, but there is nothing to copy many files
-# in meson.
-doc_templates = custom_target('copy-templates',
-  input : 'doctemplates',
-  output : 'doctemplates',
-  command : [
-    python, '-c',
-      'import sys, shutil;' +
-      'shutil.rmtree(sys.argv[2], ignore_errors=True);' +
-      'shutil.copytree(sys.argv[1], sys.argv[2])',
-    '@INPUT@', '@OUTPUT@'])
+doc_templates = []
+subdir('doctemplates/devdocs')
+subdir('doctemplates/mallard')
 
 flex = find_program('flex', 'win_flex')
 bison = find_program('bison', 'win_bison')
diff --git tests/scanner/meson.build tests/scanner/meson.build
index 5176b9572ccf14c0e68f37a5bf26c9d9e6ed2373..b81b3fd5fd2fcf37d8d0e7a52030f1cf7397c30f 100644
--- tests/scanner/meson.build
+++ tests/scanner/meson.build
@@ -525,19 +525,26 @@ foreach gir : test_girs
 endforeach
 
 if has_girdoctool and glib_dep.type_name() == 'pkgconfig'
+  doctool_env = environment()
+  doctool_env.set('srcdir', meson.current_source_dir())
+  doctool_env.set('builddir', meson.current_build_dir())
+
   foreach language : ['C', 'Python', 'Gjs']
     regress_docs = custom_target(
       'generate-docs-' + language,
       input: regress_gir,
-      depends: [doc_templates],
+      depend_files: doc_templates,
       build_by_default: not cairo_deps_found,
+      env: doctool_env,
       output: 'Regress-1.0-' + language,
       command: [
         python, girdoctool,
         '--add-include-path=' + join_paths(build_root, 'gir'),
         '--add-include-path=' + meson.current_build_dir(),
         '--language', language,
-        '@INPUT@', '-o', '@OUTPUT@'],
+        '--templates-dir=' + join_paths(meson.current_source_dir(), '../../giscanner/doctemplates'),
+        '@INPUT@', '-o', '@OUTPUT@',
+      ],
     )
 
     if cairo_deps_found
@@ -546,10 +553,7 @@ if has_girdoctool and glib_dep.type_name() == 'pkgconfig'
         python,
         args: [gi_tester, 'Regress-1.0-' + language],
         depends: [regress_docs],
-        env: [
-          'srcdir=' + meson.current_source_dir(),
-          'builddir=' + meson.current_build_dir(),
-        ],
+        env: doctool_env,
       )
     endif
   endforeach
@@ -557,9 +561,10 @@ if has_girdoctool and glib_dep.type_name() == 'pkgconfig'
   regress_sections = custom_target(
     'generate-docs-sections',
     input: regress_gir,
-    depends: [doc_templates],
+    depend_files: [doc_templates],
     build_by_default: not cairo_deps_found,
     output: 'Regress-1.0-sections.txt',
+    env: doctool_env,
     command: [
       python, girdoctool,
       '--add-include-path=' + join_paths(build_root, 'gir'),
@@ -574,10 +579,7 @@ if has_girdoctool and glib_dep.type_name() == 'pkgconfig'
       python,
       args: [gi_tester, 'Regress-1.0-sections.txt'],
       depends: [regress_sections],
-      env: [
-        'srcdir=' + meson.current_source_dir(),
-        'builddir=' + meson.current_build_dir(),
-      ],
+      env: doctool_env,
     )
   endif
 endif

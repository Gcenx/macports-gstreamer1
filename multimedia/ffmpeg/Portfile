# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           xcodeversion 1.0
PortGroup           muniversal 1.0
PortGroup           compiler_blacklist_versions 1.0
PortGroup           active_variants 1.1

# For 'TARGET_OS_OSX', 'TARGET_CPU_ARM64' macros
PortGroup           legacysupport 1.1

# https://trac.macports.org/ticket/59246
# https://trac.macports.org/ticket/59308
PortGroup           xcode_workaround 1.0

name                ffmpeg
set my_name         ffmpeg
conflicts           ffmpeg-devel
# Please increase the revision of mpv whenever ffmpeg's version is updated.
epoch               1
version             4.4.1
revision            3
license             GPL-2+
categories          multimedia
maintainers         {devans @dbevans} {jeremyhu @jeremyhu} {mascguy @mascguy} openmaintainer

description         FFmpeg is a complete solution to play, record, convert and \
                    stream audio and video.

long_description    FFmpeg is a complete solution to record, convert and \
                    stream audio and video. It includes libavcodec, the \
                    leading audio/video codec library. \
                    \
                    The project is made of several components: \
                    \
                    ffmpeg is a command line tool to convert one video \
                    file format to another. It also supports grabbing and \
                    encoding in real time from a TV card. \
                    \
                    ffserver is an HTTP (RTSP is being developed) \
                    multimedia streaming server for live broadcasts. Time \
                    shifting of live broadcast is also supported. \
                    \
                    ffplay is a simple media player based on SDL and on \
                    the ffmpeg libraries. \
                    \
                    ffprobe gathers information from multimedia streams and \
                    prints it in human- and machine-readable fashion. \
                    \
                    libavcodec is a library containing all the ffmpeg \
                    audio/video encoders and decoders. Most codecs were \
                    developed from scratch to ensure best performance \
                    and high code reusability. \
                    \
                    libavformat is a library containing parsers and \
                    generators for all common audio/video formats.

platforms           darwin
homepage            https://ffmpeg.org/
master_sites        ${homepage}releases/
distname            ${my_name}-${version}
dist_subdir         ${my_name}
use_xz              yes

checksums           rmd160  ebb1f042b2ba4f13be86339d30522cd73eb6da3e \
                    sha256  eadbad9e9ab30b25f5520fbfde99fae4a92a1ae3c0257a8d68569a4651e30e02 \
                    size    9557516

depends_build       port:pkgconfig \
                    port:gmake \
                    port:cctools \
                    port:texinfo

depends_lib         port:aom \
                    port:lame \
                    port:dav1d \
                    port:libiconv \
                    port:libvorbis \
                    port:libopus \
                    port:libogg \
                    path:lib/pkgconfig/librsvg-2.0.pc:librsvg-devel \
                    port:libtheora \
                    port:libmodplug \
                    port:libvpx \
                    port:fontconfig \
                    port:freetype \
                    port:fribidi \
                    path:lib/libspeex.dylib:speex \
                    port:soxr \
                    port:bzip2 \
                    port:xz \
                    port:XviD \
                    port:x264 \
                    port:x265 \
                    port:zlib

patchfiles          patch-libavcodec-audiotoolboxenc.c.diff

# fix an upstream bug that overrides the max_b_frames setting
# https://trac.ffmpeg.org/ticket/9231
# this bug is fixed upstream in commit 55d9d6767967794edcdd6e1bbd8840fc6f4e9315
# and should therefore be available in the next release version.
patchfiles-append   patch-libavcodec-videotoolboxenc.c.diff

# enable auto configure of asm optimizations
# requires Xcode 3.1 or better on Leopard
#
minimum_xcodeversions {9 3.1}

# requires a C11 compiler
compiler.c_standard 2011

# clang-3.1 hits https://trac.macports.org/ticket/30137 (<rdar://problem/11542429>)
# clang-139 hits https://trac.macports.org/ticket/38141
# warning: unknown warning option '-Werror=partial-availability'; did you mean '-Werror=availability'? [-Wunknown-warning-option]
# warning: unknown warning option '-Wno-bool-operation'; did you mean '-Wno-bool-conversion'? [-Wunknown-warning-option]
compiler.blacklist-append {clang < 800}

configure.cflags-append -DHAVE_LRINTF ${configure.cppflags}
configure.args      --mandir=${prefix}/share/man \
                    --enable-gpl \
                    --enable-shared \
                    --enable-swscale \
                    --enable-postproc \
                    --enable-avfilter \
                    --enable-avresample \
                    --enable-pthreads \
                    --disable-indev=jack \
                    --disable-outdev=xv \
                    --disable-alsa \
                    --disable-gcrypt \
                    --disable-gmp \
                    --disable-gnutls \
                    --disable-libass \
                    --disable-libbluray \
                    --enable-libdav1d \
                    --enable-libfontconfig \
                    --enable-libfreetype \
                    --enable-libfribidi \
                    --enable-libmodplug \
                    --enable-libmp3lame \
                    --enable-libopus \
                    --enable-librsvg \
                    --enable-libsoxr \
                    --enable-libspeex \
                    --enable-libtheora \
                    --enable-libvorbis \
                    --enable-libvpx \
                    --enable-libx264 \
                    --enable-libx265 \
                    --disable-libxcb \
                    --disable-libxcb-shm \
                    --disable-libxcb-xfixes \
                    --disable-libxcb-shape \
                    --enable-libxvid \
                    --enable-lzma \
                    --disable-openssl \
                    --disable-sndio \
                    --disable-sdl2 \
                    --disable-securetransport \
                    --disable-xlib \
                    --enable-zlib \
                    --enable-audiotoolbox \
                    --enable-videotoolbox \
                    --cc=${configure.cc}

build.cmd           ${prefix}/bin/gmake
build.env-append    V=1

test.run            yes

destroot.env-append V=1

#
# configure isn't autoconf and they do use a dep cache
#

post-destroot {
    file mkdir ${destroot}${prefix}/share/doc/ffmpeg
    file copy ${worksrcpath}/doc/APIchanges ${destroot}${prefix}/share/doc/ffmpeg
    foreach f [glob ${worksrcpath}/doc/*.txt] {
        file copy $f ${destroot}${prefix}/share/doc/ffmpeg
    }
}

configure.universal_args-delete --disable-dependency-tracking

if {${universal_possible} && [variant_isset universal]} {
    foreach arch ${configure.universal_archs} {
        set merger_host($arch) ""
        lappend merger_configure_args($arch) --arch=${arch}
        lappend merger_configure_env($arch)  ASFLAGS='-arch ${arch}'
    }
    if {[string match "*86*" ${configure.universal_archs}]} {
        depends_build-append port:nasm
    }
    lappend merger_configure_args(i386) --enable-x86asm
    lappend merger_configure_args(x86_64) --enable-x86asm
} else {
    configure.args-append --arch=${configure.build_arch}
    configure.env-append  ASFLAGS=[get_canonical_archflags]
    if {${build_arch} eq "i386" || ${build_arch} eq "x86_64"} {
        depends_build-append port:nasm
        configure.args-append --enable-x86asm
    }
}

# the build server uses the default variants, and we want distributable binaries
# nonfree code is disabled by default but can be enabled using the +nonfree variant

variant nonfree description {enable nonfree code, libraries and binaries will not be redistributable} {
    configure.args-append   --enable-nonfree \
                            --enable-libfdk-aac
    depends_lib-append      port:libfdk-aac
    license                 Restrictive
}

if {[variant_isset nonfree]} {
notes "
This build of ${name} includes nonfree code as follows:
  libfdk-aac
The following libraries and binaries may not be redistributed:
  ffmpeg
  libavcodec
  libavdevice
  libavfilter
  libavformat
  libavutil
To remove this restriction remove the variant +nonfree
"
} else {
notes "
This build of ${name} includes GPLed code and is therefore licensed under GPL v2 or later.
The following modules are GPLed:
  postproc
  libx264
  libx265
  libxvid
To include all nonfree, GPLed and LGPL code use variant +nonfree.
To remove nonfree and GPLed code leaving only LGPL code remove the +gpl2 variant.
"
}

livecheck.type      regex
livecheck.url       ${master_sites}
livecheck.regex     "${my_name}-(\\d+(?:\\.\\d+)*)${extract.suffix}"
